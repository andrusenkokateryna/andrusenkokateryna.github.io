(function() {
  var gruntFunction;

  module.exports = gruntFunction = function(grunt) {
    var gruntConfig, ref, shortCut, splitTasks, task, tasks;
    gruntConfig = {
      urequire: {
        _all: {
          dependencies: {
            imports: {
              lodash: ['_']
            }
          },
          runtimeInfo: false,
          bare: true,
          template: {
            name: 'nodejs',
            banner: true
          }
        },
        lib: {
          path: 'source/code',
          dstPath: 'build/code',
          resources: ['inject-version']
        },
        spec: {
          path: 'source/spec',
          dstPath: 'build/spec',
          afterBuild: require('urequire-ab-specrunner').options({
            mochaOptions: '--bail'
          })
        },
        specWatch: {
          derive: 'spec',
          watch: true
        }
      }
    };
    splitTasks = function(tasks) {
      if (tasks instanceof Array) {
        return tasks;
      } else {
        return tasks.split(/\s/).filter(function(f) {
          return !!f;
        });
      }
    };
    for (shortCut in gruntConfig.urequire) {
      grunt.registerTask(shortCut, "urequire:" + shortCut);
    }
    ref = {
      "default": 'lib spec',
      develop: 'lib specWatch'
    };
    for (shortCut in ref) {
      tasks = ref[shortCut];
      grunt.registerTask(shortCut, splitTasks(tasks));
    }
    for (task in grunt.file.readJSON('package.json').devDependencies) {
      if (task.lastIndexOf('grunt-', 0) === 0) {
        grunt.loadNpmTasks(task);
      }
    }
    return grunt.initConfig(gruntConfig);
  };

}).call(this);
